#include <iostream>
#include <vector>
#include <list>

using namespace std;

vector<int> first_negIntSumSubarrayOfSizeK(vector<int>& arr, int k) {
    int size = arr.size();
    vector<int> v;
    int i = 0, j = 0;
    list<int> ls;  // Declare ls here

    while (j < size) {
        if (arr[j] < 0)
            ls.push_back(arr[j]);
        
        if (j - i + 1 < k)
            j++;
        else if (j - i + 1 == k) {
            if (ls.size() == 0)
                v.push_back(0);
            else {
                v.push_back(ls.front());
                if (arr[i] == ls.front()) {
                    ls.pop_front();
                }
                
            }
            i++;
            j++;
        }
    }

    return v;
}

int main() {
    int n, k;
    vector<int> arr;

    cout << "Enter the size: ";
    cin >> n;

    for (int i = 0; i < n; i++) {
        int a;
        cin >> a;
        arr.push_back(a);
    }

    cout << "Enter size of sliding window: ";
    cin >> k;

    vector<int> result = first_negIntSumSubarrayOfSizeK(arr, k);

    // Print the result
    cout << "Resulting vector: ";
    for (int num : result) {
        cout << num << " ";
    }
    cout << endl;

    return 0;
}
